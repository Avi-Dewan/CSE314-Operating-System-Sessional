Parameter expansion is a feature in Bash that allows you to manipulate and expand variables. It provides a way to modify the value of a variable, perform substring extraction, remove parts of a string, and more. Here are some common use cases of parameter expansion in Bash:

1. Variable Expansion:
   - You can access the value of a variable using the `$` symbol followed by the variable name. For example:
     ```bash
     name="John"
     echo "Hello, $name!"
     ```
     Output: `Hello, John!`
     
2. Default Value:
   - Parameter expansion allows you to specify a default value for a variable in case it is unset or empty. The syntax is `${variable:-default}`. For example:
     ```bash
     name=""
     echo "Hello, ${name:-Guest}!"
     ```
     Output: `Hello, Guest!`
     
3. Length of a Variable:
   - To get the length of a variable's value, you can use `${#variable}`. For example:
     ```bash
     text="Hello, World!"
     echo "Length: ${#text}"
     ```
     Output: `Length: 13`
     
4. Substring Extraction:
   - Parameter expansion allows you to extract substrings from variables using the `${variable:start:length}` syntax. For example:
     ```bash
     text="Hello, World!"
     echo "${text:7:5}"
     ```
     Output: `World`
     
5. String Replacement:
   - Parameter expansion can be used to replace substrings within variables using the `${variable/pattern/replacement}` syntax. For example:
     ```bash
     text="Hello, World!"
     echo "${text/Hello/Hi}"
     ```
     Output: `Hi, World!`
     
6. Removing Patterns:
   - Parameter expansion allows you to remove patterns from variables using the `${variable/pattern}` syntax. For example:
     ```bash
     text="Hello, World!"
     echo "${text/Hello/}"
     ```
     Output: `, World!`

These are just a few examples of parameter expansion in Bash. It provides a flexible way to manipulate variables and perform string operations. You can explore more advanced options and combinations of parameter expansion by referring to the Bash documentation or online resources.